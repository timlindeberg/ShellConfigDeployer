#!/usr/bin/env bash

# This is an example of how scd can be used to automatically deploy
# an up to date version of your config before sshing in to the server.
# Typing sshops <host> and the password will make sure that the
# configuration on the host is up to date and then ssh in to the machine.

TMP_FILE="/tmp/tmp.txt"
DEFAULT_SHELL="zsh"

function cleanup() {
	rm $TMP_FILE > /dev/null 2>&1
}

set -e
trap cleanup EXIT

DEPENDENCIES=(sshpass jq)
for PROGRAM in ${DEPENDENCIES[*]}; do
    if ! command -v $PROGRAM >/dev/null 2>&1; then
	    echo "sshops requires $PROGRAM. Install it using a package manager e.g. 'brew install $PROGRAM'."
        exit 1
    fi
done

CONFIG_FILE=~/.scd/config
if [ ! -f $CONFIG_FILE ]; then
    echo "Configuration file $CONFIG_FILE is missing."
    exit 1
fi

USER=$(cat $CONFIG_FILE | jq -r .user)
if [ "$USER" == "null" ]; then
    echo "No username specified in $CONFIG_FILE."
    exit 1
fi

SHELL=$(cat $CONFIG_FILE | jq -r .shell)
if [ "$SHELL" == "null" ]; then
    SHELL=$DEFAULT_SHELL
fi

SERVER=$1

if [ -z "$SERVER" ]; then
	echo "usage: sshops <server>"
	exit 1
fi

MAX_TRIES=3
TRIES=0
while [ $TRIES -le $MAX_TRIES ]; do
	read -s -p "Password:" PASSWORD
	echo
	echo $PASSWORD > $TMP_FILE

	scd -f $TMP_FILE $SERVER
	if [ "$?" -eq '5' ]; then
		let TRIES=TRIES+1
		continue
	fi

    # The -t $SHELL part is a workaround used when chsh can't be used
	sshpass -f $TMP_FILE ssh -p 2222 "$USER@$SERVER" -t $SHELL
	if [ "$?" -eq '5' ]; then
		let TRIES=TRIES+1
		continue
	fi
	break
done
